name: Generate Snake Animation

on:
  schedule:
    - cron: "0 0 * * *" # daily at midnight
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Generate snake animation
        uses: Platane/snk@v3
        with:
          github_user_name: apilacharya
          outputs: |
            dist/github-contribution-grid-snake.svg

      - name: Commit & Push changes
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = './dist/github-contribution-grid-snake.svg';

            if (!fs.existsSync(path)) {
              console.log('Snake animation file does not exist. Skipping commit.');
              return;
            }

            const content = fs.readFileSync(path, { encoding: 'base64' });

            const branch = 'main'; // change if needed
            const refData = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${branch}`
            });
            const latestCommitSha = refData.data.object.sha;

            const commitData = await github.rest.git.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: latestCommitSha
            });
            const baseTreeSha = commitData.data.tree.sha;

            const blobData = await github.rest.git.createBlob({
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: content,
              encoding: 'base64'
            });

            const newTree = await github.rest.git.createTree({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base_tree: baseTreeSha,
              tree: [
                {
                  path: 'output/github-contribution-grid-snake.svg',
                  mode: '100644',
                  type: 'blob',
                  sha: blobData.data.sha
                }
              ]
            });

            const newCommit = await github.rest.git.createCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              message: 'docs: update snake animation',
              tree: newTree.data.sha,
              parents: [latestCommitSha]
            });

            await github.rest.git.updateRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${branch}`,
              sha: newCommit.data.sha
            });

            console.log('Snake animation updated and pushed successfully!');
